# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-10-06 20:04
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_cliente', models.BooleanField(default=False)),
                ('is_oferente', models.BooleanField(default=False)),
                ('identificacion', models.CharField(max_length=20)),
                ('celular', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Direccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_direccion', models.CharField(max_length=255)),
                ('complemento', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parqueadero',
            fields=[
                ('ParqueaderoId', models.AutoField(primary_key=True, serialize=False)),
                ('tipoVehiculo', models.CharField(choices=[('M', 'Motocicleta'), ('B', 'Bicicleta'), ('C', 'Carro')], default='C', max_length=20)),
                ('tipoDisponibilidad', models.CharField(choices=[('A', '24/7'), ('B', 'L/V 24Hrs'), ('C', 'L/V 7am-9pm'), ('D', 'Otro horario')], default='A', max_length=10)),
                ('caracteristicas', models.CharField(max_length=255)),
                ('direccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Direccion')),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('parqueadero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Parqueadero')),
            ],
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('vehiculoId', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('M', 'Motocicleta'), ('B', 'Bicicleta'), ('C', 'Carro')], default='C', max_length=20)),
                ('modelo', models.CharField(max_length=255)),
                ('es_principal', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ayudante',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Oferente',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='reserva',
            name='vehiculo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Vehiculo'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='vehiculo',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Cliente'),
        ),
        migrations.AddField(
            model_name='reserva',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Cliente'),
        ),
        migrations.AddField(
            model_name='parqueadero',
            name='oferente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Oferente'),
        ),
    ]
